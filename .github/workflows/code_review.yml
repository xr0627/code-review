name: Code Review Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 API 密钥环境变量
      - name: Set environment variables
        run: echo "API_KEY_SECRET=${{ secrets.API_KEY_SECRET }}" >> $GITHUB_ENV

      # 获取代码差异和提交信息
      - name: Get changes and commit info
        id: get_changes
        run: |
          # 检查是否有提交历史
          if git rev-parse --quiet --verify HEAD; then
            changes=$(git diff HEAD~1 HEAD)  # 有历史提交的情况
          else
            changes=$(git diff HEAD)  # 第一次提交的情况
          fi

          commitHash=$(git rev-parse HEAD)
          author=$(git log -1 --pretty=format:'%an <%ae>')

          # 输出结果
          echo "Commit: $commitHash"
          echo "Author: $author"
          echo "代码差异："
          echo "$changes"

          # 将输出传递给后续步骤
          echo "::set-output name=commit_hash::$commitHash"
          echo "::set-output name=author::$author"
          echo "::set-output name=changes::$changes"

      # 运行代码审查脚本
      - name: Run Code Review Script
        run: |
          chmod +x scripts/code_review.sh  # 确保脚本有执行权限
          ./scripts/code_review.sh "${{ steps.get_changes.outputs.changes }}" # 传递代码差异作为参数

      # 上传生成的 Markdown 结果
      - name: Upload Markdown Review Results
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: code-review-result
          path: codeReviewLog/codeReviewResult_*.md
