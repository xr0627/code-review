name: Code Review Automation

# 定义触发条件：代码 push 到 main 分支或者提交 pull request 时触发
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  review:
    runs-on: ubuntu-latest  # 运行环境，这里使用 Ubuntu 最新版本

    steps:
      # 检出仓库代码到 GitHub Action runner 中
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 拉取最近两个提交的历史记录

      # 设置所需环境变量，例如 API_KEY_SECRET (可以在 GitHub Secrets 中配置)
      - name: Set environment variables
        run: echo "API_KEY_SECRET=${{ secrets.API_KEY_SECRET }}" >> $GITHUB_ENV

      # 运行 Shell 脚本，执行代码差异获取和 API 调用
      - name: Run Code Review Script
        run: |
          chmod +x scripts/code_review.sh  # 确保脚本有执行权限
          ./scripts/code_review.sh          # 运行代码审查脚本

      # 列出生成的文件目录，调试文件生成是否正常
      - name: List codeReviewLog directory contents
        run: ls -la codeReviewLog

      # 检查生成的 Markdown 文件是否存在
      - name: Check if Markdown file exists
        run: |
          if [ -f "codeReviewLog/codeReviewResult_*.md" ]; then
            echo "Markdown file found."
          else
            echo "Markdown file not found!"
            exit 1
          fi

      # 将生成的 Markdown 文件保存为工作流的输出
      - name: Upload Markdown Review Results
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: code-review-result
          path: codeReviewLog/codeReviewResult_*.md  # 上传所有生成的 Markdown 文件
